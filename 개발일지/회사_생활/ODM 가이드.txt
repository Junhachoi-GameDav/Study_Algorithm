odm에서 다양하게 지원해준다. (오픈소스)

webODM을 깃 클론한 뒤 실행하면 안에 도커파일이 있어서 도커 컨테이너 및 이미지가 자동으로 생성.
안에 nodeODM이 같이 설치됨. 

그후 clusterODM 깃 클론한 뒤
docker build -t 하고싶은 이름
이미지 빌드

docker run -d --network my_network -p 8080:8080 -p 10000:10000 --name clusterodm opendronemap/clusterodm
실행할때 포트 두개 8080은 터미널 명령어 용 10000은 웹ui 용이다.

노드생성
docker run -d --network my_network -p 3000:3000 --name nodeodm1 opendronemap/nodeodm
docker run -d --network my_network -p 3001:3000 --name nodeodm1 opendronemap/nodeodm
docker run -d --network my_network -p 3002:3000 --name nodeodm1 opendronemap/nodeodm

클오디엠 에서 add node를 누르거
host = 175.116.181.37 (내 pc ip)
port = 3000 (차례로) 
만들면됨

이제 웹오디엠에가서
프로세싱 노드 메뉴 -> 노드들을 생성(위에처럼) -> 프로젝트 생성 ->이미지 넣고 노드 생성했던 클오디엠 노드로 설정해주고 실행


*실험 소감*
컴퓨터 하나로 컨테이너 나눠서 병렬처리해도 cpu코어 갯수는 똑같아서 속도 차이 거의 안난다... 
그냥 cpu랑 램이 좋아야 함.
게다기 수동으로 나중에 합쳐줘야한다...
파이썬 스크립트 gdal같은거나 Qgis에서 merge해주는 작업을 따로 해줘야함. 
아니면 노드 하나를 더 만들어서 3개의 zip파일을 다운받고 노드 하나로 보내서 결과물을 하나로 합침.( <- 이거 미친짓임)

그래도 컴퓨터를 여러대 쓰면 쪼금 빨라질 수는 있다.
(근데 퀄리티를 버리고 속도를 잡는거임... 그렇다고 속도가 엄청 빨리지는것도 아님...) 
그냥 웹오디엠에서 노드 하나로 돌리는게 나음. (cpu랑 램이 좋아야함!!)

그리고 사진을 여러장을 쓰고 겹칠수록 퀄리티가 좋아진다. 
병렬처리로 사진의 개수를 쪼갠 후의 결과물을 나중에 합치는 것이기 때문에
최소 16~32장 이상의 사진이 필요(문서에 나와있음) (20장 기준으로 3개의 노드를 돌렸는데 하나가 정상이 아님)
32장도 엄청 적은 것. 보통 50장 이상 정도하는것 같음. 
사진을 적게 쓰면 그만큼 퀄리티가 떨어져서 나중에 합쳐도 뭉개져있음.

100~150장씩 나눠서 한다거나 컴퓨터가 남아돈다면 의미가 있을수도 있음. (퀄리티가 최대한 안떨어지는 가정에서 합치면 됨.)

같은 사양 일때
23장 기준 한번에 14분 X 컴터 3대 + 합치기 (1시간쯤... 미지수)
63장 기준 한번에 29분

사진의 양은 1/3을 써서 시간은 두배 줄어들었지만 나중에 합치는(노드에 zip을 넣는 방법)시간 이게 63장 돌린거보다 더 걸림 ㅋㅋㅋㅋㅋㅋㅋ...
아니면 파이썬 스크립트 gdal등으로 합쳐야함.

**********결론***********
결국 속도를 잡으려면 3d모델링이나 정사 영상등의 옵션을 전부 빼고난 뒤에 합치기를 해야 속도를 겨우 잡을 수 있음.(3d 매쉬는 포기해야함)
포인트 클라우드, 정사사진 및 고도 모델등등 하나만 남긴다면(근데 이것도 나중에 합칠때 잘 안 합쳐짐) 의미있는 기술
또는
한번에 돌리기 매우매우 큰경우 (*최소 2000장 이상 = 사진 양이많아서 퀄리티가 깨지지않을정도 최소 한 노드당 100장)일때 써야하는 기술임.
이것도 당연히 (3d mesh 포기해야함).