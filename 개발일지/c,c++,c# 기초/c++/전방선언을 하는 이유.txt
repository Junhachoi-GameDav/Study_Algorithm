
// 실질적인 내용은 없지만 미리선언해서 오류없이 넘기고
//cpp 파일에서 include "Item.h" 하는것이다.
//왜 이런 행동을 하는가? -> 인벤토리 함수를 사용하는 모든 함수는
//include "Item.h"를 포함해야한다. 그러면 용량 낭비이다.
//cpp에서 실질적인 코드를 사용하니까 item을 사용할 cpp파일에만 include하는 것이다.~~~~!!!!!

헤더 파일이 헤더파일을 include 하면 서로 가져오려다 보니까 꼬여서 오류발생
A -> B
B -> A  ????

그래서 왠만하면 헤더파일안에 헤더파일을 선언하지 말고 전방선언으로 넘기고
구현할것이 있으면 cpp에서(include를 여기에 했으니까) 써놓아야 한다. 또한
전방선언한 클라스를 포인터 로 선언하여야함 그래야 주소값을 타야 원본에 있는것을 사용하니까 
안하면 전방선언된 클라스가 복사되어 선언되니까
-> 거의 공식처럼