c++ 라이브러리 설치법

git 을 다운 -> vcpkg를 설치
터미널에서 vcpkg로 밑에 라이브러리들 설치해주면 됨
vcpkg search websocketpp
잘 안되면 그냥 git clone -> 이걸로 하고 vs 에서 추가 디렉토리 로 연결하면 쓸수는 있음.  


OneTBB	-
OpenCV
Boost
Proj
GDAL
Exiv2


1. 이미지의 GPS 메타데이터 추출
사용 라이브러리: Exiv2를 사용하여 .jpg 파일에서 GPS 메타데이터를 추출합니다. 
이 메타데이터는 사진이 찍힌 위치의 위도와 경도 정보를 포함하고 있습니다.
구현 방법: Exiv2 라이브러리의 도움을 받아, 이미지 파일로부터 GPS 메타데이터를 추출하는 함수를 작성합니다. 
이 함수는 위도와 경도 정보를 반환해야 합니다.

2. TCP/IP 통신을 통한 데이터 전송 및 수신
사용 라이브러리: Boost.Asio 또는 websocketpp를 사용하여 특정 서버에 접속하고, 
이미지 데이터를 전송 후, 처리 결과를 기다립니다.
구현 방법: TCP 클라이언트를 구현하여 서버에 연결하고, 이미지 파일을 전송합니다. 
서버로부터 영상좌표 폴리곤 데이터를 WKT 형식으로 수신받습니다. 데이터 수신 후, 접속을 정상적으로 종료합니다.

3. 수신받은 폴리곤 데이터 파싱
구현 방법: 수신받은 WKT 포맷의 문자열 데이터를 파싱하여, 각 점의 좌표를 추출합니다. 
이 좌표들은 영상좌표 시스템에 있습니다.

POLYGON((3754 2815,624 468,4173, ... )) 이런식으로 표현됨


4. 영상좌표를 지상좌표로 변환
사용 라이브러리: proj 라이브러리를 사용하여 위도와 경도를 EPSG:5186 좌표계로 변환합니다.
구현 방법: 사진의 GPS 메타데이터를 이용하여, 사진이 찍힌 지점의 EPSG:5186 좌표계 상의 위치를 계산합니다. 
영상좌표 폴리곤을 사진좌표로 옮긴 후, 이를 지상좌표 폴리곤으로 변환하는 알고리즘을 개발합니다. 
이 과정에서 지상고 20m의 완전한 평지를 가정하고, 카메라/렌즈 왜곡 및 자세는 무시합니다.

- epsg.io에서 5186 이런 주소를 치면 좌표가 나옴
- 사이트 밑에 PROJ.4 를 누르면 "+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
	이런 값이 나옴.(특정 문자열인데) 이것을 받아와서 proj라이브러리로 계산 하면됨


5. 변환된 지상좌표 폴리곤 저장
구현 방법: 변환된 지상좌표 폴리곤의 각 점을 std::vector<cv::Mat>에 저장합니다. 
이는 OpenCV의 행렬 구조체를 사용하여 각 점의 x, y 좌표를 저장하는 것을 의미합니다.

예시 코드 스니펫 (가상)
이러한 과정들은 상당히 복잡한 프로그램을 요구합니다. 아래는 각 단계의 구현을 위한 가상의 코드 스니펫입니다.
실제 프로젝트에는 이보다 훨씬 많은 세부 사항과 예외 처리가 필요할 것입니다.
