CPU 아키텍처를 나타낸다.

x86 (32-bit):
	- 옛날거나 하드웨어, 기계,  성능 구데기 등등 인거 전용 아키텍쳐
	
32비트 아키텍처를 사용합니다.
주로 오래된 시스템이나 32비트 운영 체제에서 실행됩니다.
이 아키텍처는 최대 4GB의 메모리에 접근할 수 있습니다.
일부 오래된 응용 프로그램이나 라이브러리는 여전히 32비트로 컴파일되어 있으며, 이러한 경우에는 x86 아키텍처가 필요합니다.
	

x64 (64-bit):
	-요즘 모든 기기는 거의 이거다. 컴퓨터, 스마트폰 등등 

64비트 아키텍처를 사용합니다.
현대 시스템의 대부분은 64비트 운영 체제를 지원하며, 이러한 시스템에서 실행됩니다.
32비트보다 더 많은 메모리 주소 공간을 제공하므로, 더 많은 메모리를 처리할 수 있습니다. 이는 대규모 또는 메모리 집약적인 응용 프로그램에 유용합니다.
일부 특정 라이브러리나 환경은 64비트로 컴파일되어 있어야 하며, 이 경우에는 x64 아키텍처가 필요합니다.



Q1. 어떤 경우에는 x86 아키텍처를 선택해야 하나요?

일부 경우에는 여전히 x86 아키텍처를 선택해야 할 수 있습니다. 예를 들어, 
오래된 하드웨어나 운영 체제를 지원해야 하는 경우에는 x86 아키텍처를 선택할 수 있습니다. 
또한 특정 라이브러리나 응용 프로그램이 32비트로만 제공되는 경우에도 x86 아키텍처를 사용해야 합니다.


Q2. x64 아키텍처를 사용하는 것이 항상 좋은가요?

일반적으로 현대 시스템에서는 x64 아키텍처를 사용하는 것이 좋습니다. 이는 더 많은 메모리를 처리할 수 있고, 
더 높은 성능을 제공합니다. 하지만 모든 경우에 적합한 것은 아닙니다. 
예를 들어, 특정 라이브러리나 환경이 64비트로 컴파일되어 있지 않은 경우에는 x64 아키텍처를 사용할 수 없습니다.


Q3. 프로그램을 개발할 때 x86과 x64를 동시에 지원하는 방법은 무엇인가요?

프로그램을 개발할 때 x86과 x64를 동시에 지원하는 것은 중요합니다. 
이를 위해 Visual Studio에서는 플랫폼 대상으로 x86과 x64를 모두 선택할 수 있습니다. 
또한 프로젝트 구성을 별도로 설정하여 각 아키텍처에 맞는 코드를 작성하고 컴파일할 수 있습니다. 
이렇게 하면 사용자가 해당 아키텍처에 맞게 프로그램을 선택할 수 있게 됩니다.

